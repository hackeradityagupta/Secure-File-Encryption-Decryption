from tkinter import *
from tkinter import filedialog, messagebox
from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
import os

BLOCK_SIZE = 16

def pad(data):
    padding_len = BLOCK_SIZE - len(data) % BLOCK_SIZE
    return data + bytes([padding_len]) * padding_len

def unpad(data):
    padding_len = data[-1]
    return data[:-padding_len]

def encrypt_file(filepath, key):
    with open(filepath, 'rb') as f:
        data = f.read()
    data = pad(data)
    iv = get_random_bytes(16)
    cipher = AES.new(key, AES.MODE_CBC, iv)
    encrypted_data = iv + cipher.encrypt(data)
    with open(filepath + ".enc", 'wb') as f:
        f.write(encrypted_data)

def decrypt_file(filepath, key):
    with open(filepath, 'rb') as f:
        encrypted_data = f.read()
    iv = encrypted_data[:16]
    cipher = AES.new(key, AES.MODE_CBC, iv)
    decrypted_data = unpad(cipher.decrypt(encrypted_data[16:]))
    output_path = filepath.replace(".enc", ".dec")
    with open(output_path, 'wb') as f:
        f.write(decrypted_data)

def browse_file():
    filename = filedialog.askopenfilename()
    file_path.set(filename)

def encrypt_clicked():
    path = file_path.get()
    password = key_entry.get().encode()
    if len(password) not in [16, 24, 32]:
        messagebox.showerror("Error", "Key must be 16, 24, or 32 bytes long.")
        return
    try:
        encrypt_file(path, password)
        messagebox.showinfo("Success", "File encrypted successfully!")
    except Exception as e:
        messagebox.showerror("Error", str(e))

def decrypt_clicked():
    path = file_path.get()
    password = key_entry.get().encode()
    if len(password) not in [16, 24, 32]:
        messagebox.showerror("Error", "Key must be 16, 24, or 32 bytes long.")
        return
    try:
        decrypt_file(path, password)
        messagebox.showinfo("Success", "File decrypted successfully!")
    except Exception as e:
        messagebox.showerror("Error", str(e))

root = Tk()
root.title("Secure File Encryptor")
root.geometry("400x250")
root.resizable(False, False)

file_path = StringVar()

Label(root, text="Select File:").pack(pady=5)
Entry(root, textvariable=file_path, width=40).pack()
Button(root, text="Browse", command=browse_file).pack(pady=5)

Label(root, text="Enter Secret Key (16/24/32 bytes):").pack(pady=5)
key_entry = Entry(root, show='*', width=30)
key_entry.pack()

Button(root, text="Encrypt", command=encrypt_clicked, bg="green", fg="white", width=15).pack(pady=10)
Button(root, text="Decrypt", command=decrypt_clicked, bg="blue", fg="white", width=15).pack()

root.mainloop()

